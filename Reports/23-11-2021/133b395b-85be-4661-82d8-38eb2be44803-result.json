{"name": "test_010_max_rpm", "status": "broken", "statusDetails": {"message": "serial.serialutil.SerialException: could not open port 'COM4': FileNotFoundError(2, 'The system cannot find the file specified.', None, 2)", "trace": "@pytest.fixture\n    def pre_conditions_tc_010():\n        global wait_time, pps, rly, dsl, xrg\n        print('***************Pre Conditions Test Case 10***************')\n        wait_time = randint(2, 30)\n        pps = RigolDP800('USB0::0x1AB1::0x0E11::DP8B224001956::INSTR')\n>       rly = Relay16CH('COM4')\n\nScripts\\Demo_Code\\test_001_demo_1.py:195: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nHardware\\relay_usb.py:6: in __init__\n    self._ser = serial.Serial(port=com_port, baudrate=baud_rate)\nvenv\\lib\\site-packages\\serial\\serialwin32.py:33: in __init__\n    super(Serial, self).__init__(*args, **kwargs)\nvenv\\lib\\site-packages\\serial\\serialutil.py:244: in __init__\n    self.open()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = Serial<id=0x28373166c40, open=False>(port='COM4', baudrate=11520, bytesize=8, parity='N', stopbits=1, timeout=None, xonxoff=False, rtscts=False, dsrdtr=False)\n\n    def open(self):\n        \"\"\"\\\n        Open port with current settings. This may throw a SerialException\n        if the port cannot be opened.\n        \"\"\"\n        if self._port is None:\n            raise SerialException(\"Port must be configured before it can be used.\")\n        if self.is_open:\n            raise SerialException(\"Port is already open.\")\n        # the \"\\\\.\\COMx\" format is required for devices other than COM1-COM8\n        # not all versions of windows seem to support this properly\n        # so that the first few ports are used with the DOS device name\n        port = self.name\n        try:\n            if port.upper().startswith('COM') and int(port[3:]) > 8:\n                port = '\\\\\\\\.\\\\' + port\n        except ValueError:\n            # for like COMnotanumber\n            pass\n        self._port_handle = win32.CreateFile(\n            port,\n            win32.GENERIC_READ | win32.GENERIC_WRITE,\n            0,  # exclusive access\n            None,  # no security\n            win32.OPEN_EXISTING,\n            win32.FILE_ATTRIBUTE_NORMAL | win32.FILE_FLAG_OVERLAPPED,\n            0)\n        if self._port_handle == win32.INVALID_HANDLE_VALUE:\n            self._port_handle = None    # 'cause __del__ is called anyway\n>           raise SerialException(\"could not open port {!r}: {!r}\".format(self.portstr, ctypes.WinError()))\nE           serial.serialutil.SerialException: could not open port 'COM4': FileNotFoundError(2, 'The system cannot find the file specified.', None, 2)\n\nvenv\\lib\\site-packages\\serial\\serialwin32.py:64: SerialException"}, "attachments": [{"name": "stdout", "source": "77054cc2-f667-410d-b1d0-7a2cd5d17bf2-attachment.txt", "type": "text/plain"}], "start": 1637709503769, "stop": 1637709503769, "uuid": "f771bff9-f4e9-4a80-946b-10e40ed9e616", "historyId": "cd28ec5671d47ad0b68acfd4c6036814", "testCaseId": "842198717ccb8f81c09e793c1af5c2c5", "fullName": "Scripts.Demo_Code.test_001_demo_1#test_010_max_rpm", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "odometer"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "Scripts.Demo_Code"}, {"name": "suite", "value": "test_001_demo_1"}, {"name": "host", "value": "WX-AMADRID"}, {"name": "thread", "value": "15600-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Scripts.Demo_Code.test_001_demo_1"}]}