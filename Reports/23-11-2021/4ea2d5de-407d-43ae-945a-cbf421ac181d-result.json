{"name": "test_001_max_rpm", "status": "failed", "statusDetails": {"message": "AssertionError: assert not 300 == 300\n +  where 300 = <bound method Xirgo.read_vehicle_rpm of <Hardware.xirgo.Xirgo object at 0x00000283730D6E80>>()\n +    where <bound method Xirgo.read_vehicle_rpm of <Hardware.xirgo.Xirgo object at 0x00000283730D6E80>> = <Hardware.xirgo.Xirgo object at 0x00000283730D6E80>.read_vehicle_rpm", "trace": "pre_conditions_tc_001 = None\n\n    @pytest.mark.smoke\n    @pytest.mark.odometer\n    @severity(severity_level.CRITICAL)\n    def test_001_max_rpm(pre_conditions_tc_001):\n        print('***************Test Case 1***************')\n        rly.enable_disable_relay(1, True)\n        rly.enable_disable_relay(3, True)\n        dsl.send_RPM(1500)\n        sleep(wait_time)\n        # TODO Add comments to describe asserts\n>       assert not 300 == xrg.read_vehicle_rpm()\nE       assert not 300 == 300\nE        +  where 300 = <bound method Xirgo.read_vehicle_rpm of <Hardware.xirgo.Xirgo object at 0x00000283730D6E80>>()\nE        +    where <bound method Xirgo.read_vehicle_rpm of <Hardware.xirgo.Xirgo object at 0x00000283730D6E80>> = <Hardware.xirgo.Xirgo object at 0x00000283730D6E80>.read_vehicle_rpm\n\nScripts\\Demo_Code\\test_001_demo_1.py:259: AssertionError"}, "attachments": [{"name": "stdout", "source": "91819981-e84c-41de-9f89-abba7b1c262b-attachment.txt", "type": "text/plain"}], "start": 1637709476195, "stop": 1637709490605, "uuid": "ce90ff41-f0a9-4d61-b45e-a4d57a8938e1", "historyId": "e52e6a6eccc66210d2f938cf7c97382b", "testCaseId": "53ef70d1e1a655092187d20d6a9af1f4", "fullName": "Scripts.Demo_Code.test_001_demo_1#test_001_max_rpm", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "odometer"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "Scripts.Demo_Code"}, {"name": "suite", "value": "test_001_demo_1"}, {"name": "host", "value": "WX-AMADRID"}, {"name": "thread", "value": "15600-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Scripts.Demo_Code.test_001_demo_1"}]}