{"name": "test_002_panic_cancelled_by_driver_iot_endpoint", "status": "failed", "statusDetails": {"message": "AssertionError: Step 14: LED frequency meassured less than 4Hz.", "trace": "pre_conditions = None\n\n    @severity(severity_level.NORMAL)\n    def test_002_panic_cancelled_by_driver_iot_endpoint(pre_conditions):\n        Report.comment('******************Test Case*****************')\n        # 1. Configure IP to standard IoT endpoint\n        Report.step('IP configured to IoT endpoint.')\n        # 2. Verify that PT0 3 is configured for Pan/Priv in Fleetcare\n        Report.step()\n        Report.verify(True, True, 'PTO 3 is not configured for Pan/Priv in Fleetcare.')\n        # 3. Log into Reveal as customer and configure Panic Alerts\n        Report.step('Login into Reveal as customer.')\n        Report.comment('Panic alerts configured.')\n        # 4. Turn on ignition, and wait for 30-60 sec.\n        Report.step('Ignition turned On.')\n        Report.comment('Wait time of 50 seconds.')\n        # 5. Verify that device shows correct state in live map\n        Report.step()\n        Report.verify(True, True, 'Device does not show correct state in live map.')\n        # 6. Press pan/priv button for 6-7 seconds (LED will come on flashing at 1Hz (slow flash))\n        Report.step('Pan/priv button is pressed for 6 seconds.')\n        Report.verify(True, True, 'LED frequency meassured less than 1Hz.')\n        # 7. Check the status of pan/priv accumulator by using the command :rrval uservar 0 8\n        Report.comment('Command \":rrval uservar 0 8\"')\n        Report.verify(True, True, 'Pan/priv accumulator is disabled.')\n        # 8. Verify Panic alert triggers red banner in Reveal\n        Report.step()\n        Report.verify(True, True, 'Red Banner not trigerred in panic alert in Reveal.')\n        # 9. Indicate Panic alert is SEEN (hit “REVIEW” in red banner)\n        Report.step('Panic alert confirmed.')\n        # 10. Check LED, it should change to flashing faster (4Hz) (this may take a few moments)\n        Report.step()\n        Report.verify(True, True, 'LED frequency meassured less than 4Hz.')\n        # 11. Check the state of the pan/priv accumulator\n        Report.step()\n        Report.verify(True, True, 'Pan/priv accumulator is disabled.')\n        # 12. Verify event code 200 was generated (ex: Athena check)\n        Report.step()\n        Report.verify(True, True, 'Event code 205 was not generated.')\n        # 13. Kill constant power and wait for 30-60 secs\n        Report.step('Power Supply set to Off.')\n        Report.comment('Wait time of 50 seconds.')\n        # 14. Restore power and verify that LED returns to is previous (4Hz) state\n        Report.step('Power Supply set to Off.')\n>       Report.verify(True, False, 'LED frequency meassured less than 4Hz.')\n\nXirgo_KB1_Scripts\\Panic\\test_004_panic_seen_and_cleared_by_dispatcher.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nactual = True, expected = False, fail_string = 'LED frequency meassured less than 4Hz.'\n\n    @staticmethod\n    def verify(actual, expected, fail_string):\n>       assert actual == expected, 'Step ' + str(Report.__step_no) + ': ' + fail_string\nE       AssertionError: Step 14: LED frequency meassured less than 4Hz.\n\nLibraries\\report.py:26: AssertionError"}, "attachments": [{"name": "stdout", "source": "887e091e-f437-4450-8fb4-69bb11783fd8-attachment.txt", "type": "text/plain"}], "start": 1637791683579, "stop": 1637791683583, "uuid": "f2ec03ed-39d4-427d-b771-0d322f545f19", "historyId": "061fa70575c9ae87904abd95d7947b7e", "testCaseId": "bfd7f3b07e7286f66a97242b30d2c702", "fullName": "Xirgo_KB1_Scripts.Panic.test_004_panic_seen_and_cleared_by_dispatcher#test_002_panic_cancelled_by_driver_iot_endpoint", "labels": [{"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "Xirgo_KB1_Scripts.Panic"}, {"name": "suite", "value": "test_004_panic_seen_and_cleared_by_dispatcher"}, {"name": "host", "value": "WX-AMADRID"}, {"name": "thread", "value": "15616-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Xirgo_KB1_Scripts.Panic.test_004_panic_seen_and_cleared_by_dispatcher"}]}